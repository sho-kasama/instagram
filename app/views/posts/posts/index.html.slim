- @posts.each do |post|
  .col-md-8.col-md-2.mx-auto
    .card-wrap
      .card
        .card-header.align-items-center.d-flex
          = link_to user_path(post.user), class: "no-text-decoration" do
            = image_tag avatar_url(post.user), class: "post-profile-icon"
          = link_to user_path(post.user), class: "black-color no-text-decoration",
          -             title: post.user.name do
          strong
            = post.user.name
- if post.user_id == current_user.id
  = link_to post_path(post), method: :delete, class: "ml-auto mx-0 my-auto" do
    .delete-post-icon

= link_to(post_path(post)) do
  = image_tag post.photos.first.image.url(:medium), class: "card-img-top"
.card-body
  .row.parts
    |  <div id="like-icon-post-
    = post.id.to_s
    | "> 
    - if post.liked_by(current_user).present?
      = link_to "いいねを取り消す", post_likes_path(post.id, post.liked_by(current_user)),method: :DELETE, remote: true, class: "loved hide-text"
    - else
      = link_to "いいね", post_likes_path(post), method: :POST, remote: true, class: "love hide-text"
  = link_to "", "#", class: "comment"
|  <div id="like-text-post-
= post.id.to_s
| "> 
= render "like_text", { likes: post.likes }
div
  span
    strong
      = post.user.name
  span
    = post.caption
  = link_to time_ago_in_words(post.created_at).upcase + "前", post_path(post), class: "post-time no-text-decoration"
  |  <div id="comment-post-
  = post.id.to_s
  | "> 
  = render 'comment_list', { post: post }
= link_to time_ago_in_words(post.created_at).upcase + "前", post_path(post),
-               class: "light-color post-time no-text-decoration"
hr
|  <div class="row actions" id="comment-form-post-
= post.id.to_s
| "> 
= form_with model: [post, Comment.new], class: "w-100" do |f|
  = f.hidden_field :user_id, value: current_user.id
  = f.hidden_field :post_id, value: post.id
  = f.text_field :comment, class: "form-control comment-input border-0", placeholder: "コメント ...", autocomplete: :off
